name: "Detect Picta IPA Update and Push Changes"

on:
  push:
    paths:
      - "ipa/Picta*.ipa" # 监听 ipa 文件夹下的 Picta*.ipa 文件

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: 检出代码
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.PAT_TOKEN }}  # 使用个人访问令牌

      # Step 2: 生成 gengxin.txt 文件
      - name: Extract version and create gengxin.txt
        run: |
          # 确保 ipa 文件夹存在
          if [ ! -d "ipa" ]; then
            echo "ipa folder does not exist! Exiting workflow..."
            exit 1
          fi

          # 找到最新的 ipa 文件
          cd ipa
          latest_file=$(ls Picta*.ipa | tail -n 1)

          # 检查是否找到文件
          if [ -z "$latest_file" ]; then
            echo "No Picta*.ipa file found! Exiting workflow..."
            exit 1
          fi

          # 提取版本号
          version=$(echo "$latest_file" | sed -E 's/Picta(.*)\.ipa/\1/')

          # 打印日志供调试
          echo "Detected file: $latest_file"
          echo "Version: $version"

          # 生成 gengxin.txt 文件
          echo "【$version】" > gengxin.txt

      # Step 3: 配置 Git
      - name: Configure Git
        run: |
          git config --global user.email 'action@github.com'
          git config --global user.name 'GitHub Action'

      # Step 4: 提交更改
      - name: Commit Changes
        run: |
          git add ipa/gengxin.txt
          if ! git diff --staged --exit-code; then
            git commit -m "Auto-generate gengxin.txt for new IPA version"
          else
            echo "No changes to commit."
          fi

      # Step 5: 推送更改
      - name: Push Changes
        if: success()
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}  # 使用 Secrets 中的个人访问令牌
        run: |
          # 使用 PAT 进行身份验证
          git remote set-url origin https://x-access-token:${PAT_TOKEN}@github.com/${{ github.repository }}.git
          
          # 推送到默认分支（例如 main）
          git push origin main || echo "Nothing to push or push failed."
